/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei/native'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Pig_1: THREE.SkinnedMesh
    Pig_2: THREE.SkinnedMesh
    root: THREE.Bone
  }
  materials: {
    ['Material.003']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Armature|Idle' | 'Armature|Jump'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model() {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF(require('../assets/models/Pig.glb')) as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="Armature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.root} />
          </group>
          <group name="Pig" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh
              name="Pig_1"
              geometry={nodes.Pig_1.geometry}
              material={materials['Material.003']}
              skeleton={nodes.Pig_1.skeleton}
            />
            <skinnedMesh
              name="Pig_2"
              geometry={nodes.Pig_2.geometry}
              material={materials.Material}
              skeleton={nodes.Pig_2.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  )
}
